{"version":3,"sources":["BooksAPI.js","Book.js","ListBooks.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","Book","state","updateBookShelf","event","one","target","value","setState","props","BooksAPI","bookId","this","className","imageLinks","style","width","height","backgroundImage","thumbnail","onChange","disabled","title","authors","map","author","publisher","React","Component","ListBook","filter","oneBook","to","Search","showingBooks","errMessage","updateQuery","error","type","placeholder","BooksApp","inBooks","find","push","path","render","exact","ListBooks","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7935850e.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass Book extends React.Component {\r\n    state = {\r\n        book: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.get(this.props.book.id)\r\n        .then((book) => {\r\n            this.setState({book})\r\n        })\r\n    }\r\n\r\n    updateBookShelf = (event) => {\r\n        let one = this.state.book\r\n        \r\n        one.shelf = event.target.value\r\n        this.setState({book:one})\r\n        this.props.updateBookShelf(this.props.book,event.target.value);\r\n        BooksAPI.update(one, event.target.value)\r\n    }\r\n    render() {\r\n        const book = this.state.book\r\n        return (\r\n            <li>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        {book.imageLinks \r\n                            ? <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                            : <div className=\"book-cover\" style={{ width: 128, height: 193 }}>No thumbnail image available</div>\r\n                        }\r\n                        \r\n                        <div className=\"book-shelf-changer\">\r\n                            <select value={book.shelf} onChange={this.updateBookShelf}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    {book.authors\r\n                        ? book.authors.map(author => <div key={author} className=\"book-authors\">{author}</div>)\r\n                        : <div className=\"book-authors\">{book.publisher}</div>\r\n                    }                \r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nconst ListBook = props => {\r\n    const {books, updateBookShelf} = props\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                        <ol className=\"books-grid\">\r\n                            {books.filter(book => book.shelf===\"currentlyReading\").map(oneBook => <Book updateBookShelf={updateBookShelf} key={oneBook.id} book={oneBook}/>)}  \r\n                        </ol>\r\n                    </div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                        <ol className=\"books-grid\">\r\n                            {books.filter(book => book.shelf===\"wantToRead\").map(oneBook => <Book updateBookShelf={updateBookShelf} key={oneBook.id} book={oneBook}/>)}  \r\n                        </ol>\r\n                    </div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Read</h2>\r\n                        <ol className=\"books-grid\">\r\n                            {books.filter(book => book.shelf===\"read\").map(oneBook => <Book updateBookShelf={updateBookShelf} key={oneBook.id} book={oneBook}/>)}  \r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n                <Link\r\n                    to='/search'\r\n                >Add a book</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListBook","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport Book from './Book';\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        showingBooks: [],\r\n        errMessage:\"\"\r\n    }\r\n    \r\n    updateQuery = (query) => {\r\n        if (query==='') {\r\n            this.setState({showingBooks: []})\r\n        } else {\r\n            BooksAPI.search(query)\r\n            .then((showingBooks) => {\r\n                showingBooks.error\r\n                ? this.setState({showingBooks:[], errMessage:\"No results found\"})\r\n                : this.setState({showingBooks:showingBooks, errMessage:\"\"})\r\n            })\r\n        }\r\n    }\r\n    renderBooks() {\r\n        if (this.state.query==='') {\r\n            return this.setState({showingBooks: []})\r\n        } else {\r\n            return BooksAPI.search(this.state.query)\r\n            .then((showingBooks) => {\r\n                showingBooks.error\r\n                ? this.setState({showingBooks:[], errMessage:\"No results found\"})\r\n                : this.setState({showingBooks:showingBooks, errMessage:\"\"})\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link\r\n                        to='/'\r\n                        className=\"close-search\"\r\n                    >close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search by title or author\"\r\n                            onChange={(event) => this.updateQuery(event.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.showingBooks.map(oneBook => <Book updateBookShelf={this.props.updateBookShelf} key={oneBook.id} book={oneBook}/>)}\r\n                        {this.state.errMessage}  \r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css';\r\nimport ListBooks from './ListBooks';\r\nimport Search from './Search';\r\n\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        books: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll()\r\n        .then((books) => {\r\n            this.setState({books})\r\n        })\r\n    }\r\n\r\n    updateBookShelf = (book,shelf) => {\r\n        let books = this.state.books;\r\n        const inBooks = books.find(one => one.id===book.id);\r\n        if (inBooks) {\r\n            inBooks.shelf = shelf\r\n        } else {\r\n            book.shelf=shelf;\r\n            books.push(book)\r\n        }\r\n        this.setState({books})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Route path='/search' render={() => (\r\n                    <Search\r\n                        updateBookShelf={this.updateBookShelf}\r\n                    />\r\n                )} />\r\n                <Route exact path='/' render={() => (\r\n                    <ListBooks\r\n                        books={this.state.books}\r\n                        updateBookShelf={this.updateBookShelf}\r\n                    />\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}